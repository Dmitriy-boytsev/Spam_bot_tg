import os
import random
import asyncio
import logging
from dotenv import load_dotenv
from pyrogram import Client, errors, filters

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
api_id1 = os.getenv('API_ID1')
api_hash1 = os.getenv('API_HASH1')
phone_number1 = os.getenv('PHONE_NUMBER1')
session_name1 = "my_account1"

api_id2 = os.getenv('API_ID2')
api_hash2 = os.getenv('API_HASH2')
phone_number2 = os.getenv('PHONE_NUMBER2')
session_name2 = "my_account2"

api_id3 = os.getenv('API_ID3')
api_hash3 = os.getenv('API_HASH3')
phone_number3 = os.getenv('PHONE_NUMBER3')
session_name3 = "my_account3"

#–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–∫—Å–∏–∫–∞ 
# proxy = {
#     "scheme": "socks5",
#     "hostname": "195.208.84.211",
#     "port": 64563,
#     "username": "YvHEyB3a",
#     "password": "N4yuYYGy"
# }


# –ò–º–µ–Ω–∞ –¥–ª—è –Ω–∏–∫–Ω–µ–π–º–æ–≤
nicknames = [
    "Not Elon", "Maxim", "AlexCrypto", "MarkDeFi",
    "RewardRaider", "Jake", "Mike", "BobStake",
    "Max", "Viktor", "Aslan", "Boby", "Misha",
    "Emily", "Jackson", "Liam", "Emma"
]
usernames = [
    "ElitePhantom324", "CosmicTycoon456", "BlockBoss234",
    "ApexPredator4573", "SatoshiSeeker546","HodlHero3154",
    "SupremeMaverick325", "DynamicRogue763", "ZephyrStorm876",
    "VortexGuardian243", "AlphaSpectre3478", "HyperNova2363",
    "AltcoinAce3572", "CryptoCaster4674", "SunnySam091",
    "SmartScott1315", "RockinRyan1532", "AceAlex135",
    "VividVic4653", "JakeTheGreat687", "BoldBen456",
]
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å GIF-—Ñ–∞–π–ª–∞–º–∏
gif_directory = r'C:\Users\db\Pictures\GIF'

#–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π 
keywords_layerzero = ["layerzero", "l0", "brian", "–±—Ä–∞—è–Ω", "–±—Ä–∞–π–Ω", "–¥–æ—Ç–µ—Ä", "–ª0", "–ª–µ–µ—Ä–∑–∏—Ä–æ", "–ª–µ–µ—Ä", "–∑–µ—Ä–æ"]
keywords_liarzero = ["liarzero", "—Å–∏–±–∏–ª", "sybil", "ton", "liar"]
keywords_hello = ["–ø—Ä–∏–≤–µ—Ç", "–≥–º", "gm", "hi", "hello"]
keywords = ["lfg", "–ª—Ñ–≥", "moon", "to the moon", "rocket", "up", "buy the dip", "lets go","pump"]

#–≠–º–æ–¥–∂–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
emojis_layerzero = ["ü§Æ", "üò°", "üëé", "üí©", "ü§°"]
emojis_hello = ["‚ù§Ô∏è"]
emojis_liarzero = ["üê≥", "üåö"]
emojis_other = ["üî•", "‚ö°", "üòé"]

#–ò–Ω—Ç–≤–µ—Ä–≤–∞–ª—ã, —á—Ç–æ–± –±–æ—Ç –∫–∞–∑–∞–ª—Å—è –±–æ–ª–µ–µ –∂–∏–≤—ã–º 
time_interval_reply = random.randint(10, 50)#–ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∞–∫—Ü–∏–π 
time_interval_1 = random.randint(60, 300)# –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ —Å 1 –∞–∫–∫–∞—É–Ω—Ç–∞ 
time_interval_2 = random.randint(60, 300)# –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ —Å 2 –∞–∫–∫–∞—É–Ω—Ç–∞
time_interval_3 = random.randint(60, 300)# –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ —Å 3 –∞–∫–∫–∞—É–Ω—Ç–∞

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
app1 = Client(session_name1, api_id=api_id1, api_hash=api_hash1)
app2 = Client(session_name2, api_id=api_id2, api_hash=api_hash2)
app3 = Client(session_name3, api_id=api_id3, api_hash=api_hash3)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –≤ —á–∞—Ç–µ, –¥–æ–±–∞–≤–ª—è–µ–º—Å—è 
async def join_chat(app, chat_link):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat = await app.get_chat(chat_link)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–∞—Ç–µ
        if app.get_peer_id(chat_link) not in await app.get_dialogs():
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ —á–∞—Ç–µ, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –Ω–µ–º—É
            await app.join_chat(chat_link)
            logger.info(f"{app.name}: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —á–∞—Ç—É {chat.title}")
        else:
            logger.info(f"{app.name}: –£–∂–µ —Å–æ—Å—Ç–æ–∏–º –≤ —á–∞—Ç–µ {chat.title}")
    except errors.ChatAdminRequired:
        logger.error(f"{app.name}: –î–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —á–∞—Ç—É —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    except errors.UsernameNotOccupied:
        logger.error(f"{app.name}: –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ {chat_link}.")
    except Exception as e:
        logger.error(f"{app.name}: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ —á–∞—Ç—É: {e}")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF-—Ñ–∞–π–ª–æ–≤
async def send_saved_gifs(app, interval, chat_id):
    while True:
        gif_files = os.listdir(gif_directory)
        if not gif_files:
            logger.warning(f"{app.name}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö GIF-—Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            await asyncio.sleep(interval)
            continue

        for gif_file in gif_files:
            try:
                gif_path = os.path.join(gif_directory, gif_file)
                await app.send_document(chat_id, gif_path)
                logger.info(f"{app.name}: –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω GIF-—Ñ–∞–π–ª {gif_file} –≤ —á–∞—Ç {chat_id}.")

            except Exception as e:
                logger.error(f"{app.name}: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å GIF {gif_file} –≤ —á–∞—Ç {chat_id}: {e}")

            await asyncio.sleep(interval)


async def send_text_messages(app, interval, chat_id, message):
    while True:
        try:
            await app.send_message(chat_id, message)
            logger.info(f"{app.name}: –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '{message}' –≤ —á–∞—Ç {chat_id}.")
        except Exception as e:
            logger.error(f"{app.name}: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat_id}: {e}")

        await asyncio.sleep(interval)


# –§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞
async def change_profile(app):
    while True:
        try:
            # –°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞
            new_nickname = random.choice(nicknames)
            await app.update_profile(first_name=new_nickname)
            logger.info(f"{app.name}: –ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_nickname}")
            new_username = random.choice(usernames)
            await app.update_profile(username=new_username)

        except Exception as e:
            logger.error(f"{app.name}: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: {e}")

        await asyncio.sleep(43200)  # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω–æ–π, –°–∞–Ω—è –ø–æ–ø—Ä–æ—Å–∏–ª —Ä–∞–∑ –≤ 12 —á–∞—Å–æ–≤ –∏–ª–∏ 24 

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
async def authorize_client(app, phone_number):
    me = await app.get_me()
    if me is None:
        logger.info(f"{app.name}: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
        await app.send_code(phone_number, force_sms=False)
        code = input(f"{app.name}: –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
        try:
            await app.sign_in(phone_number=phone_number, code=code)
            logger.info(f"{app.name}: –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        except errors.SessionPasswordNeeded:
            password = input(f"{app.name}: –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA: ")
            await app.check_password(password=password)
            logger.info(f"{app.name}: –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —Å 2FA")
    else:
        logger.info(f"{app.name}: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")

#–ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∫–∞–∫–æ–π –ª–∏–±–æ –∫–ª–∏–µ–Ω—Ç –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–± —Å–ø–∞–º–∏–ª —Ä–µ–∞–∫—Ü–∏–∏ —Å –º–µ–Ω—å—à–µ–≥–æ –∫–æ–ª-–≤–∞ –∞–∫–∫–æ–≤ –∏–ª–∏ —Å –±–æ–ª—å—à–µ–≥–æ
@app1.on_message(filters.chat("@chattestingl0_chat") & filters.text)
@app2.on_message(filters.chat("@chattestingl0_chat") & filters.text)
@app3.on_message(filters.chat("@chattestingl0_chat") & filters.text)
async def my_handler(client, message):
    if message.text.lower() in keywords_layerzero:
        await asyncio.sleep(time_interval_reply)
        await message.react(random.choice(emojis_layerzero))
    elif message.text.lower() in keywords_hello:
        await asyncio.sleep(time_interval_reply)
        await message.react(random.choice(emojis_hello))
    elif message.text.lower() in keywords_liarzero:
        await asyncio.sleep(time_interval_reply)
        await message.react(random.choice(emojis_liarzero))
    elif message.text.lower() in keywords:
        await asyncio.sleep(time_interval_reply)
        await message.react(random.choice(emojis_other))

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    chat_id_1 = "@chattestingl0_chat"
    chat_id_2 = "@chattestingl0_chat"
    text_message = "/fucksybil"

    await asyncio.gather(
        authorize_client(app1, phone_number1),
        authorize_client(app2, phone_number2),
        authorize_client(app3, phone_number3),
        join_chat(app1, "https://t.me/chattestingl0_chat"),  # —Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–ø–∞–º–∏—Ç—å 
        join_chat(app2, "https://t.me/chattestingl0_chat"),
        join_chat(app3, "https://t.me/chattestingl0_chat")
    )

    await asyncio.gather(
        send_text_messages(app1, time_interval_1, chat_id_1, text_message),
        change_profile(app1),
        send_text_messages(app2, time_interval_2, chat_id_2, text_message),
        change_profile(app2),
        send_text_messages(app3, time_interval_3, chat_id_1, text_message),
        change_profile(app3)
    )

if __name__ == "__main__":
    app1.start()
    app2.start()
    app3.start()
    try:
        asyncio.get_event_loop().run_until_complete(main())
    except KeyboardInterrupt:
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    finally:
        app1.stop()
        app2.stop()
        app3.stop()
